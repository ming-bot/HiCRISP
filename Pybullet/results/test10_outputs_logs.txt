
----PROMPT for planning----
[{'role': 'system', 'content': 'You are a senior robot code engineer'}, {'role': 'user', 'content': 'Here i give you some code format examples.'}, {'role': 'user', 'content': 'pick up a block'}, {'role': 'assistant', 'content': "def pick_up_a_block():\n\t# 0: find a block\n\tfind('blue block')\n\t# 1: Pick the block\n\tpick('blue block')\n\t"}, {'role': 'user', 'content': 'put a block in a bowl'}, {'role': 'assistant', 'content': "def put_a_block_in_bowl():\n\t# 0: find a block\n\tfind('blue block')\n\t# 1: Pick the block\n\tpick('blue block')\n\t# 2: find a bowl\n\tfind('pink bowl')\n\t# 3: put the block in the bowl\n\tplace('pink bowl')\n\t"}, {'role': 'system', 'content': 'You can only use these functions: find <obj>, pick <obj>, place <obj>, and the code should not be for/while structure.'}, {'role': 'system', 'content': "You can only replace above <obj> with objects that are :['yellow block', 'gray block', 'blue block', 'green bowl', 'cyan bowl', 'brown bowl', 'pink bowl']"}]

----Test set tasks----
put all warm color blocks in the green bowl

--Executing task: put all warm color blocks in the green bowl--
Plan:  def put_all_warm_color_blocks_in_the_green_bowl():
    # 0: find the warm color blocks
    find('yellow block')
    find('orange block')
    # 1: Pick the yellow block
    pick('yellow block')
    # 2: Put the yellow block in the green bowl
    place('green bowl')
    # 3: Pick the orange block
    pick('orange block')
    # 4: Put the orange block in the green bowl
    place('green bowl')

Executing action: find yellow block

(True, array([ 0.18587299, -0.6831816 ,  0.02098936], dtype=float32))

Executing action: find orange block

(False, "The scence doesn't have the object.")

Low level correction action: findyellow block.
(True, array([ 0.18587299, -0.6831816 ,  0.02098936], dtype=float32))


success
Executing action: pick yellow block

(True, 'The action is legal.')


success
Executing action: place green bowl

(False, 'The robot should find the object first.')

Low level correction action: find ['green', 'bowl'].
Low level correction state: True.

(True, 'The action is legal')


success
Executing action: pick orange block

(False, "The scence doesn't have the object.")

Low level correction action: pickblue block.
(False, 'The robot should find the object first.')

Low level correction action: find ['orange', 'block'].
Low level correction state: False.

(False, "The scence doesn't have the object.")

Low level correction action: pickyellow block.
(True, 'The action is legal.')


success
Executing action: place green bowl

(True, 'The action is legal')


success

success
exec_subtasks: [5]
total_subtasks: [11]
